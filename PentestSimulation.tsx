import React from 'react';

export const PentestSimulation = () => {
  const [currentPhase, setCurrentPhase] = React.useState(0);
  const [currentCommand, setCurrentCommand] = React.useState(0);
  const [completed, setCompleted] = React.useState(false);

  // Penetration testing phases data
  const pentestPhases = [
    {
      id: 'recon',
      title: '1. Reconnaissance',
      description: 'Discovering the target IP address on the network',
      commands: [
        {
          command: 'sudo netdiscover -r 192.168.56.0/24',
          output: '192.168.56.105  08:00:27:xx:xx:xx  CADMUS COMPUTER SYSTEMS',
          explanation: 'The netdiscover command scans the network to find all active hosts.'
        }
      ],
      learningPoints: [
        'Network scanning is the first step in penetration testing',
        'Tools like netdiscover help identify potential targets'
      ]
    },
    // Additional phases: scanning, enumeration, exploitation, privilege-escalation
  ];

  const phase = pentestPhases[currentPhase];
  const command = phase?.commands[currentCommand];
  
  // Navigation handlers
  const handleNext = () => {
    if (currentCommand < phase.commands.length - 1) {
      setCurrentCommand(currentCommand + 1);
    } else if (currentPhase < pentestPhases.length - 1) {
      setCurrentPhase(currentPhase + 1);
      setCurrentCommand(0);
    } else {
      setCompleted(true);
    }
  };

  const handlePrevious = () => {
    if (currentCommand > 0) {
      setCurrentCommand(currentCommand - 1);
    } else if (currentPhase > 0) {
      setCurrentPhase(currentPhase - 1);
      setCurrentCommand(pentestPhases[currentPhase - 1].commands.length - 1);
    }
  };

  return (
    <div className="container mx-auto px-4 py-8">
      <h1 className="text-3xl font-bold mb-6 text-center">Penetration Testing Simulation</h1>
      
      {/* Progress indicator */}
      <div className="mb-6">
        <div className="h-2 w-full bg-gray-200 rounded-full">
          <div className="h-full bg-blue-500" style={{ width: `${(currentPhase/pentestPhases.length)*100}%` }}></div>
        </div>
      </div>
      
      {completed ? (
        /* Completion screen with summary and flag */
        <div className="border rounded-lg p-6">
          <h2 className="text-2xl font-bold">Penetration Test Completed!</h2>
          <div className="p-4 bg-green-100 rounded-md">
            <h3 className="font-bold text-green-800">Flag Captured</h3>
            <p className="font-mono">69a9a5372619033a6b3c993c007873d2</p>
          </div>
        </div>
      ) : (
        /* Active simulation screen */
        <>
          <div className="border rounded-lg p-6 mb-8">
            <h2 className="text-xl font-bold">{phase.title}</h2>
            <p>{phase.description}</p>
            
            {/* Terminal simulation */}
            <div className="bg-black text-green-500 p-4 rounded-md font-mono text-sm mb-4">
              <div>kali@kali:~$ {command.command}</div>
              <div className="mt-1">{command.output}</div>
            </div>
            
            {/* Explanation */}
            <div className="bg-blue-50 p-4 rounded-md border border-blue-200">
              <h3 className="font-bold text-blue-800">Explanation</h3>
              <p>{command.explanation}</p>
            </div>
          </div>
          
          {/* Navigation buttons */}
          <div className="flex justify-between">
            <button 
              className="px-4 py-2 border rounded"
              onClick={handlePrevious}
              disabled={currentPhase === 0 && currentCommand === 0}
            >
              Previous
            </button>
            <button 
              className="px-4 py-2 bg-blue-500 text-white rounded"
              onClick={handleNext}
            >
              Next
            </button>
          </div>
        </>
      )}
    </div>
  );
};
